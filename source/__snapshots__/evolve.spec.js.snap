// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`brute force Array | Null 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [],
    null,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": null,
  "result": "PENDING",
}
`;

exports[`brute force Array | Null 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [
      1,
    ],
    null,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": null,
  "result": "PENDING",
}
`;

exports[`brute force Array | Null 3`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [
      [Function],
    ],
    null,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": null,
  "result": "PENDING",
}
`;

exports[`brute force Array | Number 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [],
    42,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": 42,
  "result": "PENDING",
}
`;

exports[`brute force Array | Number 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [
      1,
    ],
    42,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": 42,
  "result": "PENDING",
}
`;

exports[`brute force Array | Number 3`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [
      [Function],
    ],
    42,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": 42,
  "result": "PENDING",
}
`;

exports[`brute force Array | Object 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [],
    {
      "a": 1,
    },
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": {
    "a": 1,
  },
  "result": "PENDING",
}
`;

exports[`brute force Array | Object 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [
      1,
    ],
    {
      "a": 1,
    },
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": {
    "a": 1,
  },
  "result": "PENDING",
}
`;

exports[`brute force Array | Object 3`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [
      [Function],
    ],
    {
      "a": 1,
    },
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": {
    "a": 1,
  },
  "result": "PENDING",
}
`;

exports[`brute force Array | String 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [],
    "",
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": "",
  "result": "PENDING",
}
`;

exports[`brute force Array | String 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [
      1,
    ],
    "",
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": "",
  "result": "PENDING",
}
`;

exports[`brute force Array | String 3`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [
      [Function],
    ],
    "",
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": "",
  "result": "PENDING",
}
`;

exports[`brute force Array | Undefined 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [],
    undefined,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": undefined,
  "result": "PENDING",
}
`;

exports[`brute force Array | Undefined 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [
      1,
    ],
    undefined,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": undefined,
  "result": "PENDING",
}
`;

exports[`brute force Array | Undefined 3`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    [
      [Function],
    ],
    undefined,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": undefined,
  "result": "PENDING",
}
`;

exports[`brute force Null | Array 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    null,
    [],
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": [],
  "result": "PENDING",
}
`;

exports[`brute force Null | Array 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    null,
    [
      1,
    ],
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": {
    "message": "Cannot read properties of null (reading '0')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Null | Null 1`] = `
{
  "error": {
    "message": "'iterable' and 'rules' are from wrong type Null",
    "type": "Error",
  },
  "inputs": [
    null,
    null,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": null,
  "result": "PENDING",
}
`;

exports[`brute force Null | Number 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    null,
    42,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": 42,
  "result": "PENDING",
}
`;

exports[`brute force Null | Object 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    null,
    {
      "a": 1,
    },
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": {
    "message": "Cannot read properties of null (reading 'a')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Null | String 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    null,
    "",
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": "",
  "result": "PENDING",
}
`;

exports[`brute force Null | Undefined 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    null,
    undefined,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": undefined,
  "result": "PENDING",
}
`;

exports[`brute force Number | Array 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    42,
    [],
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": [],
  "result": "PENDING",
}
`;

exports[`brute force Number | Array 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    42,
    [
      1,
    ],
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": [
    1,
  ],
  "result": "PENDING",
}
`;

exports[`brute force Number | Null 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    42,
    null,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": null,
  "result": "PENDING",
}
`;

exports[`brute force Number | Number 1`] = `
{
  "error": {
    "message": "'iterable' and 'rules' are from wrong type Number",
    "type": "Error",
  },
  "inputs": [
    42,
    42,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": 42,
  "result": "PENDING",
}
`;

exports[`brute force Number | Object 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    42,
    {
      "a": 1,
    },
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": {
    "a": 1,
  },
  "result": "PENDING",
}
`;

exports[`brute force Number | String 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    42,
    "",
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": "",
  "result": "PENDING",
}
`;

exports[`brute force Number | Undefined 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    42,
    undefined,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": undefined,
  "result": "PENDING",
}
`;

exports[`brute force Object | Array 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": 1,
    },
    [],
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": [],
  "result": "PENDING",
}
`;

exports[`brute force Object | Array 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": [Function],
    },
    [],
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": [],
  "result": "PENDING",
}
`;

exports[`brute force Object | Array 3`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": 1,
    },
    [
      1,
    ],
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": [
    1,
  ],
  "result": "PENDING",
}
`;

exports[`brute force Object | Array 4`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": [Function],
    },
    [
      1,
    ],
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": [
    1,
  ],
  "result": "PENDING",
}
`;

exports[`brute force Object | Null 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": 1,
    },
    null,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": null,
  "result": "PENDING",
}
`;

exports[`brute force Object | Null 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": [Function],
    },
    null,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": null,
  "result": "PENDING",
}
`;

exports[`brute force Object | Number 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": 1,
    },
    42,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": 42,
  "result": "PENDING",
}
`;

exports[`brute force Object | Number 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": [Function],
    },
    42,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": 42,
  "result": "PENDING",
}
`;

exports[`brute force Object | String 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": 1,
    },
    "",
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": "",
  "result": "PENDING",
}
`;

exports[`brute force Object | String 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": [Function],
    },
    "",
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": "",
  "result": "PENDING",
}
`;

exports[`brute force Object | Undefined 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": 1,
    },
    undefined,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": undefined,
  "result": "PENDING",
}
`;

exports[`brute force Object | Undefined 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    {
      "a": [Function],
    },
    undefined,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": undefined,
  "result": "PENDING",
}
`;

exports[`brute force String | Array 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    "",
    [],
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": [],
  "result": "PENDING",
}
`;

exports[`brute force String | Array 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    "",
    [
      1,
    ],
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": [
    1,
  ],
  "result": "PENDING",
}
`;

exports[`brute force String | Null 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    "",
    null,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": null,
  "result": "PENDING",
}
`;

exports[`brute force String | Number 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    "",
    42,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": 42,
  "result": "PENDING",
}
`;

exports[`brute force String | Object 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    "",
    {
      "a": 1,
    },
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": {
    "a": 1,
  },
  "result": "PENDING",
}
`;

exports[`brute force String | String 1`] = `
{
  "error": {
    "message": "'iterable' and 'rules' are from wrong type String",
    "type": "Error",
  },
  "inputs": [
    "",
    "",
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": "",
  "result": "PENDING",
}
`;

exports[`brute force String | Undefined 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    "",
    undefined,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": undefined,
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Array 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    undefined,
    [],
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": [],
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Array 2`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    undefined,
    [
      1,
    ],
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": {
    "message": "Cannot read properties of undefined (reading '0')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Null 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    undefined,
    null,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": null,
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Number 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    undefined,
    42,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": 42,
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Object 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    undefined,
    {
      "a": 1,
    },
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": {
    "message": "Cannot read properties of undefined (reading 'a')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Undefined | String 1`] = `
{
  "error": {
    "message": "iterableType !== rulesType",
    "type": "Error",
  },
  "inputs": [
    undefined,
    "",
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": "",
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Undefined 1`] = `
{
  "error": {
    "message": "'iterable' and 'rules' are from wrong type Undefined",
    "type": "Error",
  },
  "inputs": [
    undefined,
    undefined,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": undefined,
  "result": "PENDING",
}
`;
