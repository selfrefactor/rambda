// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`brute force Array | Array 1`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    Array [],
    Array [
      "",
    ],
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Array | Array 2`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    Array [],
    Array [
      1,
      2,
      3,
      4,
      5,
    ],
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Array | Null 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    Array [],
    null,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of null (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Array | Number 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    Array [],
    1,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Array | Object 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    Array [],
    Object {},
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Array | String 1`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    Array [],
    "foobar",
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Array | Undefined 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    Array [],
    undefined,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of undefined (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Function | Null 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    [Function],
    null,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of null (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Function | Null 2`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    [Function],
    null,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of null (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Function | Number 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    [Function],
    1,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Function | Number 2`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    [Function],
    1,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Function | Object 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    [Function],
    Object {},
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Function | Object 2`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    [Function],
    Object {},
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Function | Undefined 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    [Function],
    undefined,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of undefined (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Function | Undefined 2`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    [Function],
    undefined,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of undefined (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Null | Array 1`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    null,
    Array [
      "",
    ],
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Null | Array 2`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    null,
    Array [
      1,
      2,
      3,
      4,
      5,
    ],
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Null | Null 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    null,
    null,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of null (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Null | Number 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    null,
    1,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Null | Object 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    null,
    Object {},
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Null | String 1`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    null,
    "foobar",
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Null | Undefined 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    null,
    undefined,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of undefined (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Object | Array 1`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    Object {},
    Array [
      "",
    ],
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Object | Array 2`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    Object {},
    Array [
      1,
      2,
      3,
      4,
      5,
    ],
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Object | Null 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    Object {},
    null,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of null (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Object | Number 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    Object {},
    1,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Object | Object 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    Object {},
    Object {},
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Object | String 1`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    Object {},
    "foobar",
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Object | Undefined 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    Object {},
    undefined,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of undefined (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force RegExp | Array 1`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    /foo/g,
    Array [
      "",
    ],
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force RegExp | Array 2`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    /foo/g,
    Array [
      1,
      2,
      3,
      4,
      5,
    ],
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force RegExp | Null 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    /foo/g,
    null,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of null (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force RegExp | Number 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    /foo/g,
    1,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force RegExp | Object 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    /foo/g,
    Object {},
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force RegExp | String 1`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    /foo/g,
    "foobar",
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force RegExp | Undefined 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    /foo/g,
    undefined,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of undefined (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Array 1`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    undefined,
    Array [
      "",
    ],
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Array 2`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    undefined,
    Array [
      1,
      2,
      3,
      4,
      5,
    ],
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Null 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    undefined,
    null,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of null (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Number 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    undefined,
    1,
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Object 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    undefined,
    Object {},
  ],
  "label": "Rambda should not throw",
  "ok": false,
  "ramdaError": "PENDING",
  "ramdaResult": Array [],
  "result": "PENDING",
}
`;

exports[`brute force Undefined | String 1`] = `
Object {
  "error": Object {
    "message": "predicate is not a function",
    "type": "TypeError",
  },
  "inputs": Array [
    undefined,
    "foobar",
  ],
  "label": "errors messages are different",
  "ok": false,
  "ramdaError": Object {
    "message": "pred is not a function",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;

exports[`brute force Undefined | Undefined 1`] = `
Object {
  "error": Object {
    "message": "\`iterable\` is neither list nor a string",
    "type": "Error",
  },
  "inputs": Array [
    undefined,
    undefined,
  ],
  "label": "errors types are different",
  "ok": false,
  "ramdaError": Object {
    "message": "Cannot read properties of undefined (reading 'dropWhile')",
    "type": "TypeError",
  },
  "ramdaResult": "PENDING",
  "result": "PENDING",
}
`;
