import * as R from 'ramda';

export const F = R.F;
export const T = R.T;
export const add = R.add;
export const adjust = R.adjust;
export const all = R.all;
export const allPass = R.allPass;
export const always = R.always;
export const and = R.and;
export const any = R.any;
export const anyPass = R.anyPass;
export const append = R.append;
export const apply = R.apply;
export const applySpec = R.applySpec;
export const assoc = R.assoc;
export const assocPath = R.assocPath;
export const bind = R.bind;
export const both = R.both;
export const chain = R.chain;
export const clamp = R.clamp;
export const clone = R.clone;
export const complement = R.complement;
export const compose = R.compose;
export const concat = R.concat;
export const cond = R.cond;
export const converge = R.converge;
export const count = R.count;
export const countBy = R.countBy;
export const curry = R.curry;
export const curryN = R.curryN;
export const dec = R.dec;
export const defaultTo = R.defaultTo;
export const difference = R.difference;
export const dissoc = R.dissoc;
export const divide = R.divide;
export const drop = R.drop;
export const dropLast = R.dropLast;
export const dropLastWhile = R.dropLastWhile;
export const dropRepeats = R.dropRepeats;
export const dropRepeatsWith = R.dropRepeatsWith;
export const dropWhile = R.dropWhile;
export const either = R.either;
export const endsWith = R.endsWith;
export const eqProps = R.eqProps;
export const equals = R.equals;
export const evolve = R.evolve;
export const filter = R.filter;
export const find = R.find;
export const findIndex = R.findIndex;
export const findLast = R.findLast;
export const findLastIndex = R.findLastIndex;
export const flatten = R.flatten;
export const flip = R.flip;
export const forEach = R.forEach;
export const fromPairs = R.fromPairs;
export const groupBy = R.groupBy;
export const groupWith = R.groupWith;
export const has = R.has;
export const hasPath = R.hasPath;
export const head = R.head;
export const identical = R.identical;
export const identity = R.identity;
export const ifElse = R.ifElse;
export const inc = R.inc;
export const includes = R.includes;
export const indexBy = R.indexBy;
export const indexOf = R.indexOf;
export const init = R.init;
export const intersection = R.intersection;
export const intersperse = R.intersperse;
export const is = R.is;
export const isEmpty = R.isEmpty;
export const isNil = R.isNil;
export const join = R.join;
export const juxt = R.juxt;
export const keys = R.keys;
export const last = R.last;
export const lastIndexOf = R.lastIndexOf;
export const length = R.length;
export const lens = R.lens;
export const lensIndex = R.lensIndex;
export const lensPath = R.lensPath;
export const lensProp = R.lensProp;
export const map = R.map;
export const mapObjIndexed = R.mapObjIndexed;
export const match = R.match;
export const mathMod = R.mathMod;
export const max = R.max;
export const maxBy = R.maxBy;
export const mean = R.mean;
export const median = R.median;
export const mergeAll = R.mergeAll;
export const mergeDeepRight = R.mergeDeepRight;
export const mergeLeft = R.mergeLeft;
export const mergeRight = R.mergeRight;
export const mergeWith = R.mergeWith;
export const min = R.min;
export const minBy = R.minBy;
export const modifyPath = R.modifyPath;
export const modulo = R.modulo;
export const move = R.move;
export const multiply = R.multiply;
export const negate = R.negate;
export const none = R.none;
export const not = R.not;
export const nth = R.nth;
export const objOf = R.objOf;
export const of = R.of;
export const omit = R.omit;
export const on = R.on;
export const once = R.once;
export const or = R.or;
export const over = R.over;
export const partial = R.partial;
export const partialObject = R.partialObject;
export const partition = R.partition;
export const path = R.path;
export const pathEq = R.pathEq;
export const pathOr = R.pathOr;
export const paths = R.paths;
export const pick = R.pick;
export const pickAll = R.pickAll;
export const pipe = R.pipe;
export const pluck = R.pluck;
export const prepend = R.prepend;
export const product = R.product;
export const prop = R.prop;
export const propEq = R.propEq;
export const propIs = R.propIs;
export const propOr = R.propOr;
export const propSatisfies = R.propSatisfies;
export const props = R.props;
export const range = R.range;
export const reduce = R.reduce;
export const reject = R.reject;
export const repeat = R.repeat;
export const replace = R.replace;
export const reverse = R.reverse;
export const set = R.set;
export const slice = R.slice;
export const sort = R.sort;
export const sortBy = R.sortBy;
export const split = R.split;
export const splitAt = R.splitAt;
export const splitEvery = R.splitEvery;
export const splitWhen = R.splitWhen;
export const startsWith = R.startsWith;
export const subtract = R.subtract;
export const sum = R.sum;
export const symmetricDifference = R.symmetricDifference;
export const tail = R.tail;
export const take = R.take;
export const takeLast = R.takeLast;
export const takeLastWhile = R.takeLastWhile;
export const takeWhile = R.takeWhile;
export const tap = R.tap;
export const test = R.test;
export const times = R.times;
export const toLower = R.toLower;
export const toPairs = R.toPairs;
export const toString = R.toString;
export const toUpper = R.toUpper;
export const transpose = R.transpose;
export const trim = R.trim;
export const tryCatch = R.tryCatch;
export const type = R.type;
export const unapply = R.unapply;
export const union = R.union;
export const uniq = R.uniq;
export const uniqBy = R.uniqBy;
export const uniqWith = R.uniqWith;
export const unless = R.unless;
export const unwind = R.unwind;
export const update = R.update;
export const values = R.values;
export const view = R.view;
export const when = R.when;
export const where = R.where;
export const whereAny = R.whereAny;
export const whereEq = R.whereEq;
export const without = R.without;
export const xor = R.xor;
export const zip = R.zip;
export const zipObj = R.zipObj;
export const zipWith = R.zipWith; 
