

  reduce
    ✓ folds simple functions over arrays with the supplied accumulator
    ✓ dispatches to objects that implement `reduce`
    ✓ returns the accumulator for an empty array
    1) Prefers the use of the iterator of an object over reduce (and handles short-circuits)
    2) short circuits with reduced


  3 passing (94ms)
  2 failing

  1) reduce
       Prefers the use of the iterator of an object over reduce (and handles short-circuits):
     TypeError: f is not a function
      at Reducible.f [as reduce] (test/reduce.js:35:15)
      at reduceFn (/home/s/repos/rambda/dist/rambda.js:1006:15)
      at /home/s/repos/rambda/dist/rambda.js:19:60
      at Object.reduce (/home/s/repos/rambda/dist/rambda.js:19:90)
      at Context.reduce (test/reduce.js:70:10)
      at processImmediate (internal/timers.js:439:21)

  2) reduce
       short circuits with reduced:
     TypeError: R.reduced is not a function
      at reduced (test/reduce.js:74:72)
      at Array.reduce (<anonymous>)
      at reduceFn (/home/s/repos/rambda/dist/rambda.js:1006:15)
      at /home/s/repos/rambda/dist/rambda.js:19:60
      at Object.reduce (/home/s/repos/rambda/dist/rambda.js:19:90)
      at Context.reduce (test/reduce.js:76:10)
      at processImmediate (internal/timers.js:439:21)



